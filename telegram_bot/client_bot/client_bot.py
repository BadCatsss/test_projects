import sys
import os
workpath=sys.path.append(os.getcwd())
from share.catalog_event import Catalog_event
#–û–°–ù–û–í–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï –í –≠–¢–û–ú –ú–û–î–£–õ–ï
from share.imports  import *
#import FSM_register
#import FSM_handlers
#for_test
my_id=None
#
def init_settings(rply_keyboard_conf,chat_reply_button_config_file,inln_keyboard_conf):
    global client_bot
    global service_bot
    global client_bot_dispatcher
    global service_bot_dispatcher
    global reply_buttons_cnfg_list
    global inline_buttons_cnfg_list
    global catalog_events_list
    global replay_kybrd
    global inline_kybrd
    global inline_kybrd_for_owner
    global catalog_pos
    global inline_kybrd_confirm
    global fsm_states_dist
    global chat_reply_buttons_cnfg_list
    global chat_replay_kybrd
    global inline_kybrd_cancel
    global inline_buttons_cnfg_list_cancel
    global client_bot_token
    global service_bot_token
    global client_bot_id
    global service_bot_id
    catalog_pos=0
    
   #–°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä - —á–∏—Ç–∞–µ–º –∫–æ—Ñ–Ω–∏–≥–∏
    IO_base.read_conf_file(rply_keyboard_conf,default_conf.default_reply_btn_conf)
    reply_buttons_cnfg_list=IO_base.file_read_res
    IO_base.read_conf_file(chat_reply_button_config_file,default_conf.default_chat_btn_conf)
    chat_reply_buttons_cnfg_list=IO_base.file_read_res
    IO_base.read_conf_file(inln_keyboard_conf,default_conf.default_inline_btn_conf)
    inline_buttons_cnfg_list=IO_base.file_read_res
    IO_base.read_conf_file(inline_button_config_file_owner,default_conf.default_inline_btn_conf_for_owner)
    inline_buttons_cnfg_list_for_owner=IO_base.file_read_res
    IO_base.read_conf_file(inline_button_confrm_config_file,default_conf.default_inline_confirm_btn)
    inline_buttons_cnfg_list_confirm=IO_base.file_read_res
    IO_base.read_conf_file(inline_button_cancel_config_file,default_conf.default_inline_btn_cancel_op)
    inline_buttons_cnfg_list_cancel=IO_base.file_read_res
   
    
    #for_test
    #my_id=IO_base.read_tken_file("test_id.txt")
    # #for test
    # event_disp.add_event_to_list(catalog_event.Catalog_event('https://telegram.org/img/t_logo.png','test_title','test_title','test_desc','1111','12.12.21'))
    # event_disp.add_event_to_list(catalog_event.Catalog_event('https://telegram.org/img/t_logo.png','test_title','test_title','test_desc',my_id,'12.12.21'))
    #event_disp.add_event_to_list(catalog_event.Catalog_event('h//telegram.org/img/t_logo.d','test_title','test_title','test_desc',my_id,'12.12.21'))
    # #

    #–î–∏—Å–ø–µ—Ç—á–µ—Ä —Å–æ–±—ã—Ç–∏–π –∫–∞—Ç–∞–ª–æ–≥–∞
    catalog_events_list=event_disp.get_events()
     #–°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä - —Å–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    replay_kybrd=construct_keyboard(getButtons(reply_buttons_cnfg_list,True),True)
    chat_replay_kybrd=construct_keyboard(getButtons(chat_reply_buttons_cnfg_list,True),True)
    inline_kybrd=construct_keyboard(getButtons(inline_buttons_cnfg_list,False),False)
    inline_kybrd_for_owner=construct_keyboard(getButtons(inline_buttons_cnfg_list_for_owner,False),False)
    inline_kybrd_confirm=construct_keyboard(getButtons(inline_buttons_cnfg_list_confirm,False),False)
    inline_kybrd_cancel=construct_keyboard(getButtons(inline_buttons_cnfg_list_cancel,False),False)
    #–¢–æ–∂–µ –ø—Ä–µ–ø–æ–ª–∞–≥–∞–ª–æ FSM (—Å–º FSM_handlers.pu –∏ FSM_register.py –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–∏–∂–µ)
    # fsm_states_dist={
    # FSM_handlers.FSM_states.leave_chat_state: FSM_handlers.leave_chat_handler,
    # FSM_handlers.FSM_states.start_chat_state:FSM_handlers.see_event_handler,
    # FSM_handlers.FSM_states.wait_chat_msg_state:FSM_handlers.wait_chat_msg_handler,
    # FSM_handlers.FSM_states.start_chat_state:FSM_handlers.start_chat_handler}

    #–ù–∞—Å—Ç—Ä–π–æ–∫–∞ –±–æ—Ç–æ–≤
    client_bot_token=IO_base.read_tken_file(client_bot_token_file_path)
    client_bot_id=client_bot_token[:client_bot_token.find(":")]
    client_bot = Bot(client_bot_token)
    client_bot_dispatcher=Dispatcher(client_bot,storage=MemoryStorage())

init_settings(rply_keyboard_conf=reply_button_config_file,chat_reply_button_config_file=chat_reply_button_config_file,
inln_keyboard_conf=inline_button_config_file)

async  def send_catalog(catalog,msg):
    global inline_kybrd
    global inline_kybrd_for_owner
    global catalog_pos
    for e in catalog:
        catalog_pos=catalog_pos+1
        snd_msg=e.evnet_title+'\n'+e.event_desc
        is_correct_media_type=False
        for t in media_types:
            if e.media_path.endswith(t):
                is_correct_media_type=True
                break
        if not ((e.media_path.startswith("https://") or e.media_path.startswith("http://")) and is_correct_media_type):
            e.media_path=default_event_img
        await client_bot.send_photo(msg.from_user.id,photo=e.media_path,caption=snd_msg)
        if e.event_owner_id==msg.from_user.id:
                    await msg.answer(text='–î–µ–π—Å—Ç–≤–∏—è –¥–ª—è —Å–æ–±—ã—Ç–∏—è - '+str(catalog_pos-1)+':', reply_markup=inline_kybrd)
        else:
                    await msg.answer(text='–î–µ–π—Å—Ç–≤–∏—è –¥–ª—è —Å–æ–±—ã—Ç–∏—è - '+str(catalog_pos-1)+':', reply_markup=inline_kybrd_for_owner)    

@client_bot_dispatcher.message_handler()
async def handle_usr_msg(msg:types.Message):
    global usr_msg
    global catalog_pos
    global in_chat_with_owner
    global event_create_in_progress
    global event_create_progress_step
    usr_msg=msg
    if msg.text=='/start':
        await client_bot.send_message(msg.from_user.id,'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å,'+msg.from_user.full_name,reply_markup=replay_kybrd)
    if msg.text==default_conf.catalog_text:
        event_create_progress_step=0
        event_create_in_progress=False
        catalog_pos=0
        if len(catalog_events_list)==0:
            await client_bot.send_message(msg.from_user.id,'–ö–∞—Ç–∞–ª–æ–≥ –ø—É—Å—Ç',reply_markup=replay_kybrd)
        if len(catalog_events_list)>0 and len(catalog_events_list)<=2:
            await  send_catalog(catalog_events_list,msg)
        else:
             await  send_catalog(catalog_events_list[:2],msg)
             delta_len=len(catalog_events_list)-2
             if delta_len>0:
                pagination_kybrd=InlineKeyboardMarkup()
                for i in range(delta_len):
                    pagination_kybrd.add(InlineKeyboardButton(text="+"+str(i+1),callback_data=default_conf.pagination_callback+str(i+1)))
                await msg.answer(text='–ü–æ–∫–∞–∑–∞—Ç—å –±–æ–ª—å—à–µ:', reply_markup=pagination_kybrd)
    if msg.text==default_conf.leave_chat_text:
        in_chat_with_owner=False
        await msg.answer(text='–í—ã–±–∏—Ä–µ—Ç–µ –¥—Ä—É–≥–æ–µ —Å–æ–±—ã—Ç–∏–µ', reply_markup=replay_kybrd)
    if msg.text==default_conf.show_event_text and ev_disp.Catalog_event_dispatcher.choosen_event!=None:
        event_d='\n–ù–∞–∑–≤–∞–Ω–∏–µ:\n'+ev_disp.Catalog_event_dispatcher.choosen_event.evnet_title+'\n'+'–û–ø–∏—Å–∞–Ω–∏–µ:\n'+ev_disp.Catalog_event_dispatcher.choosen_event.event_desc
        await msg.answer(text='–í—ã –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ —Å–æ–±—ã—Ç—ã–µ'+event_d, reply_markup=chat_replay_kybrd)
    elif in_chat_with_owner:    
       await share.send_to_another_bot.send_to_bot(ev_disp.Catalog_event_dispatcher.choosen_event.evnet_title,msg.from_user.full_name,msg.text,service_bot,ev_disp.Catalog_event_dispatcher.choosen_event.event_owner_id,inline_kybrd_for_owner)
       # —Å–∞–º —Å–µ–±–µ FSM ) 
    elif msg.text==default_conf.add_event_text or event_create_in_progress:
        if msg.text==default_conf.add_event_text:
            event_create_progress_step=0
            event_create_in_progress=True
            ev_pipline_text=""
            for e in event_pipline:
                ev_pipline_text+=str(e+1)+"."+event_pipline[e]+"\n"
            ev_pipline_text+="–ß—Ç–æ –±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —à–∞–≥–æ–≤ - –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —à–∞–≥–∞ (0,1,2..) - –º–µ–Ω—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ –Ω–æ–º–µ—Ä–∞"
            await msg.answer(text=ev_pipline_text,reply_markup=inline_kybrd_cancel)
            await msg.answer(text=str(event_create_progress_step)+"."+event_pipline[event_create_progress_step])
        elif event_create_in_progress:
            if len(msg.text)==1 and str.isdigit(msg.text) and  int(msg.text) in event_pipline.keys(): #–í–∫—Ä–Ω—É—Ç—å—Å—è –∫ –æ–¥–Ω–æ–º—É –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —à–∞–≥–æ–≤
                if int(msg.text)<event_create_progress_step:
                    event_create_progress_step=int(msg.text)
                    await msg.answer(text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –∫ —à–∞–≥—É - "+msg.text)
                else:
                    await msg.answer(text="–í—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –∫ –ø—Ä–æ–π–¥–µ–Ω—ã–º —à–∞–≥–∞–º. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ —à–∞–≥–∞.")
            elif len(msg.text)>2: # –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ
                event_create_progress_step=event_create_progress_step+1
                if event_create_progress_step<len(event_pipline):
                    event_pipline_answ[event_create_progress_step]=msg.text
                    await msg.answer(text=str(event_create_progress_step)+"."+event_pipline[event_create_progress_step])                          
                else:
                    created_event=Catalog_event(event_pipline_answ[3],event_pipline_answ[0],event_pipline_answ[1],event_pipline_answ[2],msg.from_user.id,event_pipline_answ[4])
                    accepted_text=''
                    event_disp.add_event_to_list(created_event)
                    event_create_progress_step=0
                    event_create_in_progress=False
                    accepted_text+="–ò–º—è —Å–ª–±—ã—Ç–∏—è:\n"+created_event.evnet_title+'\n–û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è:\n'+created_event.event_desc+"\n"
                    accepted_text+="–í—ã —Å–æ–∑–¥–∞–ª–∏ —Å–æ–±—ã—Ç–∏–µüëÜüëÜüëÜ\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤  @"+service_bot_name+" –∏ –Ω–∞–ø–∏—à–∏—Ç–µ /start\n"
                    await msg.answer(text=accepted_text)                
            else:
                await msg.answer(text="–î–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 2—Ö —Å–∏–º–≤–æ–ª–æ–≤")
            
@client_bot_dispatcher.callback_query_handler()
async def inline_keyboard_callback(callback_q:types.CallbackQuery):
    global usr_msg
    global catalog_pos
    global event_disp
    global fsm_states_dist
    global in_chat_with_owner
    global event_create_progress_step
    global event_create_in_progress
    if usr_msg!=None:
        if callback_q.data==inline_kybrd_callbacks[default_conf.connect_text]:
            #https://qna.habr.com/q/1061628 –∏ 
            # https://ru.stackoverflow.com/questions/1339067/aiogram-fsm-%D0%BD%D0%B5-%D0%BC%D0%B5%D0%BD%D1%8F%D0%B5%D1%82-%D1%81%D0%BE%D1%81%D1%82%D0%BE%D1%8F%D0%BD%D0%B8%D0%B5
            #  - —Å–ø—Ä–∞—à–∏–≤–∞–ª –Ω–∞ —Ñ–æ—Ä—É–º–∞—Ö - —Ç.–∫ –Ω–µ –º–æ–≥ –ø–æ–Ω—è—Ç—å –ø–æ—á–µ–º—É FSM - –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
            # state = bot_dispatcher.current_state(user=usr_msg.from_user.id)
            # await FSM_register.start_fsm(bot_dispatcher,fsm_states_dist,state=state)
            # await FSM_handlers.FSM_states.start_chat_state.set()
            #–í –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ö –ª–µ–∂–∞—Ç –≤—Å–ø–æ–º–∞–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã FSM_handlers.pu –∏ FSM_register.py  - –∫–æ—Ç–æ—Ä—ã–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
            #–ü–æ—ç—Ç–æ–º—É –¥–∞–ª—å—à–µ –∏–¥—É—Ç –∫–æ—Å—Ç—ã–ª–∏ –∏ —Å–∞–º–æ–ø–∏—Å–Ω—ã–µ FSM -  –±–µ–∑ "—Ä–µ–∞–ª—å–Ω–æ–π" FSM 
            # (—É–≤—ã, —Ö–æ—Ç—å –∏ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —ç—Ç–æ –Ω–µ –ø–æ –¢–ó –∏ —Ö–æ—á–µ—Ç—Å—è –ø–æ—É–±–∏–≤–∞—Ç—å —Ç–∞–∫–∏—Ö –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª–∞—é—Ç –≤—Å–µ –Ω–µ –ø–æ –¢–ó - –≤–µ–¥—å —Ç–∞–º —Ä—É—Å—Å–∫–∏–º –ø–æ –±–µ–ª–æ–º—É –Ω–∞–ø–∏—Å–∞–Ω–Ω–æ,
            #  –ù–û —è —á–µ—Å—Ç–Ω–æ –ø–æ—Ç—Ä–∞—Ç–∏–ª –¥–µ–Ω—å, –∞ –≤—Ä–µ–º—è –∫–∞–∫ –±—ã –∏–¥–µ—Ç –∏ —Å–¥–∞–≤–∞—Ç—å –Ω–∞–¥–æ)
            await client_bot.answer_callback_query(callback_q.id,"") 
            ev_disp.Catalog_event_dispatcher.choosen_event=event_disp.get_events()[catalog_pos-1]
            await usr_msg.answer('–í—ã –≤–æ—à–ª–∏ –≤ —á–∞—Ç —Å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º —Å–æ–±—ã—Ç–∏—è - '+ev_disp.Catalog_event_dispatcher.choosen_event.evnet_title,reply_markup=chat_replay_kybrd)
            #–ü—Ä–µ–¥–∞—Ç—Å–∞–≤–∏–º (—Ö–æ—Ç—è –±—ã –Ω–∞ –º–∏–Ω—É—Ç—É), —á—Ç–æ —ç—Ç–æ –Ω–∞—à–∞ –ú–∞—à–∏–Ω–∞ –°–æ—Å—Ç–æ—è–Ω–∏–π (—Å–∞–º –Ω–µ –∑–Ω–∞–ª —á—Ç–æ –æ–Ω–∏ —Ç–∞–∫ –≤—ã–≥–ª—è–¥—è—Ç) )
            in_chat_with_owner=True
            
        if callback_q.data==inline_kybrd_callbacks[default_conf.del_text] or callback_q.data==inline_kybrd_callbacks[default_conf.accept_text]  or  callback_q.data==inline_kybrd_callbacks[default_conf.reject_text]:
            if callback_q.data==inline_kybrd_callbacks[default_conf.del_text]:
                await client_bot.answer_callback_query(callback_q.id,"")
                await usr_msg.answer("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ? –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ",reply_markup=inline_kybrd_confirm)
            if callback_q.data==inline_kybrd_callbacks[default_conf.accept_text]:
                event_disp.remove_event(catalog_pos)
                await client_bot.answer_callback_query(callback_q.id,"")
                await usr_msg.answer("–°–æ–±—ã—Ç–∏–µ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ")
                return
            if callback_q.data==inline_kybrd_callbacks[default_conf.reject_text]:
                await client_bot.answer_callback_query(callback_q.id,"")
                await usr_msg.answer("–û–∫, –Ω–∏—á–µ–≥–æ –Ω–µ —É–¥–∞–ª–µ–Ω–æ")
                return 
        if re.match(default_conf.pagination_callback+"[0-9]",callback_q.data):
            pagination_number=int(callback_q.data[-1])
            return  await  send_catalog(catalog_events_list[catalog_pos::pagination_number],usr_msg)  
        if callback_q.data==inline_kybrd_callbacks[default_conf.cancel_operation_text]: #cancel create event
            event_create_progress_step=0
            event_create_in_progress=False
            await usr_msg.answer("–û–∫, —Å–æ–±—ã—Ç–∏–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–æ")


if __name__=='__main__':
    if client_bot_dispatcher!=None and reply_buttons_cnfg_list!=None and client_bot_token!=None and client_bot_token!=None:
        executor.start_polling(client_bot_dispatcher)


